<testsuite name="features.kitseller.Kit seller" tests="5" errors="0" failures="0" skipped="0" time="0.439206" timestamp="2022-06-20T23:04:34.177156" hostname="legion-linux"><testcase classname="features.kitseller.Kit seller" name="US4: As a kit seller, I want to see a kits inventory, so that I know how many kits I can currently supply to clients." status="passed" time="0.088871"><system-out>
<![CDATA[
@scenario.begin
  Scenario: US4: As a kit seller, I want to see a kits inventory, so that I know how many kits I can currently supply to clients.
    Given a set of specific parts ... passed in 0.009s
      | name  | description  | quantity |
      | partA | descriptionA | 12       |
      | partB | descriptionB | 8        |
      | partC | descriptionC | 5        |
    Given a bag type "bagtype1" with parts list of ... passed in 0.012s
      | name | part  | quantity |
      | A    | partA | 1        |
      | B    | partB | 2        |
    Given a bag type "bagtype2" with parts list of ... passed in 0.013s
      | name | part  | quantity |
      | A    | partB | 2        |
      | B    | partC | 3        |
    Given a bag type "bagtype3" with parts list of ... passed in 0.008s
      | name | part  | quantity |
      | A    | partC | 1        |
    Given a set of specific bags ... passed in 0.008s
      | name | kind     | quantity | complete |
      | AB   | bagtype1 | 10       | X        |
      | AB   | bagtype2 | 10       | X        |
    Given a kit type "kittype1" with bags list of ... passed in 0.013s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    Given a kit type "kittype2" with bags list of ... passed in 0.017s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 2        |
      | C    | bagtype3 | 3        |
    Given a set of specific kits ... passed in 0.007s
      | name | kind     | quantity | complete |
      | A    | kittype1 | 10       |          |
      | ABC  | kittype2 | 11       | X        |
    When I read all "kit" ... passed in 0.002s
    Then the first item should have "name" equal to "A" ... passed in 0.000s
    And the first item should have "quantity" equal to number "10" ... passed in 0.000s
    But the last item should have "name" equal to "ABC" ... passed in 0.000s
    And the last item should have "quantity" equal to number "11" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
bagtype.data {'id': 25, 'kind': 'bagtype1'}
[OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 45), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
bagtype.data {'id': 26, 'kind': 'bagtype2'}
[OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 45), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 45), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])
bagtype.data {'id': 27, 'kind': 'bagtype3'}
[OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 45), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 45), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])
OrderedDict([('id', 25), ('kind', 'bagtype1')])
OrderedDict([('id', 25), ('kind', 'bagtype1')])
OrderedDict([('id', 26), ('kind', 'bagtype2')])
kittype.data {'id': 12, 'kind': 'kittype1'}
[OrderedDict([('id', 25), ('kind', 'bagtype1')]), OrderedDict([('id', 26), ('kind', 'bagtype2')]), OrderedDict([('id', 27), ('kind', 'bagtype3')])]
OrderedDict([('id', 25), ('kind', 'bagtype1')])
OrderedDict([('id', 25), ('kind', 'bagtype1')])
OrderedDict([('id', 26), ('kind', 'bagtype2')])
kittype.data {'id': 13, 'kind': 'kittype2'}
[OrderedDict([('id', 25), ('kind', 'bagtype1')]), OrderedDict([('id', 26), ('kind', 'bagtype2')]), OrderedDict([('id', 27), ('kind', 'bagtype3')])]
OrderedDict([('id', 25), ('kind', 'bagtype1')])
OrderedDict([('id', 25), ('kind', 'bagtype1')])
OrderedDict([('id', 26), ('kind', 'bagtype2')])
OrderedDict([('id', 25), ('kind', 'bagtype1')])
OrderedDict([('id', 26), ('kind', 'bagtype2')])
OrderedDict([('id', 27), ('kind', 'bagtype3')])
All kitypes: [OrderedDict([('id', 12), ('kind', 'kittype1')]), OrderedDict([('id', 13), ('kind', 'kittype2')])]
OrderedDict([('id', 12), ('kind', 'kittype1')])
OrderedDict([('id', 12), ('kind', 'kittype1')])
OrderedDict([('id', 13), ('kind', 'kittype2')])
All kit: [OrderedDict([('id', 18), ('name', 'A'), ('quantity', 10), ('complete', False), ('kind', 12)]), OrderedDict([('id', 19), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 13)])]
[OrderedDict([('id', 18), ('name', 'A'), ('quantity', 10), ('complete', False), ('kind', 12)]), OrderedDict([('id', 19), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 13)])]
[OrderedDict([('id', 18), ('name', 'A'), ('quantity', 10), ('complete', False), ('kind', 12)]), OrderedDict([('id', 19), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 13)])]
[OrderedDict([('id', 18), ('name', 'A'), ('quantity', 10), ('complete', False), ('kind', 12)]), OrderedDict([('id', 19), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 13)])]
[OrderedDict([('id', 18), ('name', 'A'), ('quantity', 10), ('complete', False), ('kind', 12)]), OrderedDict([('id', 19), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 13)])]

]]>
</system-out></testcase><testcase classname="features.kitseller.Kit seller" name="US5: As a kit seller, I want to update the kits inventory, so that I can prepare and sell kits." status="passed" time="0.099971"><system-out>
<![CDATA[
@scenario.begin
  Scenario: US5: As a kit seller, I want to update the kits inventory, so that I can prepare and sell kits.
    Given a set of specific parts ... passed in 0.005s
      | name  | description  | quantity |
      | partA | descriptionA | 12       |
      | partB | descriptionB | 8        |
      | partC | descriptionC | 5        |
    Given a bag type "bagtype1" with parts list of ... passed in 0.012s
      | name | part  | quantity |
      | A    | partA | 1        |
      | B    | partB | 2        |
    Given a bag type "bagtype2" with parts list of ... passed in 0.014s
      | name | part  | quantity |
      | A    | partB | 2        |
      | B    | partC | 3        |
    Given a bag type "bagtype3" with parts list of ... passed in 0.007s
      | name | part  | quantity |
      | A    | partC | 1        |
    Given a set of specific bags ... passed in 0.007s
      | name | kind     | quantity | complete |
      | AB   | bagtype1 | 10       | X        |
      | AB   | bagtype2 | 10       | X        |
    Given a kit type "kittype1" with bags list of ... passed in 0.010s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    Given a kit type "kittype2" with bags list of ... passed in 0.016s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 2        |
      | C    | bagtype3 | 3        |
    Given a set of specific kits ... passed in 0.006s
      | name | kind     | quantity | complete |
      | A    | kittype1 | 10       |          |
      | ABC  | kittype2 | 11       | X        |
    When I read all "kit" ... passed in 0.002s
    When I update the first kit as follows ... passed in 0.006s
      | name | kind     | quantity | complete |
      | AB   | kittype1 | 20       | X        |
    And I read all "kit" ... passed in 0.001s
    Then the first item should have "name" equal to "AB" ... passed in 0.000s
    And the first item should have "quantity" equal to number "20" ... passed in 0.000s
    When I create "10" "kit" of "kittype2" "kittype" with name "AB" ... passed in 0.004s
    And I read all "kit" ... passed in 0.002s
    Then the last item should have "name" equal to "AB" ... passed in 0.000s
    And the last item should have "quantity" equal to number "10" ... passed in 0.000s
    When I read all "kit" ... passed in 0.002s
    When I delete the first "kit" ... passed in 0.004s
    And I read all "kit" ... passed in 0.002s
    Then the first item should have "name" equal to "ABC" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
bagtype.data {'id': 28, 'kind': 'bagtype1'}
[OrderedDict([('id', 46), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 47), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 48), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 46), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 46), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 47), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
bagtype.data {'id': 29, 'kind': 'bagtype2'}
[OrderedDict([('id', 46), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 47), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 48), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 46), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 47), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 46), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 47), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 48), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])
bagtype.data {'id': 30, 'kind': 'bagtype3'}
[OrderedDict([('id', 46), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 47), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 48), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 46), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 47), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 48), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])
OrderedDict([('id', 28), ('kind', 'bagtype1')])
OrderedDict([('id', 28), ('kind', 'bagtype1')])
OrderedDict([('id', 29), ('kind', 'bagtype2')])
kittype.data {'id': 14, 'kind': 'kittype1'}
[OrderedDict([('id', 28), ('kind', 'bagtype1')]), OrderedDict([('id', 29), ('kind', 'bagtype2')]), OrderedDict([('id', 30), ('kind', 'bagtype3')])]
OrderedDict([('id', 28), ('kind', 'bagtype1')])
OrderedDict([('id', 28), ('kind', 'bagtype1')])
OrderedDict([('id', 29), ('kind', 'bagtype2')])
kittype.data {'id': 15, 'kind': 'kittype2'}
[OrderedDict([('id', 28), ('kind', 'bagtype1')]), OrderedDict([('id', 29), ('kind', 'bagtype2')]), OrderedDict([('id', 30), ('kind', 'bagtype3')])]
OrderedDict([('id', 28), ('kind', 'bagtype1')])
OrderedDict([('id', 28), ('kind', 'bagtype1')])
OrderedDict([('id', 29), ('kind', 'bagtype2')])
OrderedDict([('id', 28), ('kind', 'bagtype1')])
OrderedDict([('id', 29), ('kind', 'bagtype2')])
OrderedDict([('id', 30), ('kind', 'bagtype3')])
All kitypes: [OrderedDict([('id', 14), ('kind', 'kittype1')]), OrderedDict([('id', 15), ('kind', 'kittype2')])]
OrderedDict([('id', 14), ('kind', 'kittype1')])
OrderedDict([('id', 14), ('kind', 'kittype1')])
OrderedDict([('id', 15), ('kind', 'kittype2')])
All kit: [OrderedDict([('id', 20), ('name', 'A'), ('quantity', 10), ('complete', False), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)])]
OrderedDict([('id', 14), ('kind', 'kittype1')])
All kit: [OrderedDict([('id', 20), ('name', 'AB'), ('quantity', 20), ('complete', True), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)])]
[OrderedDict([('id', 20), ('name', 'AB'), ('quantity', 20), ('complete', True), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)])]
[OrderedDict([('id', 20), ('name', 'AB'), ('quantity', 20), ('complete', True), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)])]
OrderedDict([('id', 14), ('kind', 'kittype1')])
OrderedDict([('id', 15), ('kind', 'kittype2')])
All kit: [OrderedDict([('id', 20), ('name', 'AB'), ('quantity', 20), ('complete', True), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)]), OrderedDict([('id', 22), ('name', 'AB'), ('quantity', 10), ('complete', False), ('kind', 15)])]
[OrderedDict([('id', 20), ('name', 'AB'), ('quantity', 20), ('complete', True), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)]), OrderedDict([('id', 22), ('name', 'AB'), ('quantity', 10), ('complete', False), ('kind', 15)])]
[OrderedDict([('id', 20), ('name', 'AB'), ('quantity', 20), ('complete', True), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)]), OrderedDict([('id', 22), ('name', 'AB'), ('quantity', 10), ('complete', False), ('kind', 15)])]
All kit: [OrderedDict([('id', 20), ('name', 'AB'), ('quantity', 20), ('complete', True), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)]), OrderedDict([('id', 22), ('name', 'AB'), ('quantity', 10), ('complete', False), ('kind', 15)])]
<Response status_code=204>
None
All kit: [OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)]), OrderedDict([('id', 22), ('name', 'AB'), ('quantity', 10), ('complete', False), ('kind', 15)])]
[OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)]), OrderedDict([('id', 22), ('name', 'AB'), ('quantity', 10), ('complete', False), ('kind', 15)])]

]]>
</system-out></testcase><testcase classname="features.kitseller.Kit seller" name="US6: As a kit seller, I want to see how many kits are possible with the currently stocked parts, so that I know how many kits I could potentially sell to clients." status="passed" time="0.087332"><system-out>
<![CDATA[
@scenario.begin
  Scenario: US6: As a kit seller, I want to see how many kits are possible with the currently stocked parts, so that I know how many kits I could potentially sell to clients.
    Given a set of specific parts ... passed in 0.006s
      | name  | description  | quantity |
      | partA | descriptionA | 12       |
      | partB | descriptionB | 8        |
      | partC | descriptionC | 5        |
    Given a bag type "bagtype1" with parts list of ... passed in 0.012s
      | name | part  | quantity |
      | A    | partA | 1        |
      | B    | partB | 2        |
    Given a bag type "bagtype2" with parts list of ... passed in 0.012s
      | name | part  | quantity |
      | A    | partB | 2        |
      | B    | partC | 3        |
    Given a bag type "bagtype3" with parts list of ... passed in 0.008s
      | name | part  | quantity |
      | A    | partC | 1        |
    Given a set of specific bags ... passed in 0.006s
      | name | kind     | quantity | complete |
      | AB   | bagtype1 | 10       | X        |
      | AB   | bagtype2 | 10       | X        |
    Given a kit type "kittype1" with bags list of ... passed in 0.013s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    Given a kit type "kittype2" with bags list of ... passed in 0.014s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 2        |
      | C    | bagtype3 | 3        |
    Given a set of specific kits ... passed in 0.008s
      | name | kind     | quantity | complete |
      | A    | kittype1 | 10       |          |
      | ABC  | kittype2 | 11       | X        |
    When I request potential kits of "kittype1" ... passed in 0.008s
    Then I should see the "potential_kits" is number "10" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
bagtype.data {'id': 31, 'kind': 'bagtype1'}
[OrderedDict([('id', 49), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 50), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 51), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 49), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 49), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 50), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
bagtype.data {'id': 32, 'kind': 'bagtype2'}
[OrderedDict([('id', 49), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 50), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 51), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 49), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 50), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 49), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 50), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 51), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])
bagtype.data {'id': 33, 'kind': 'bagtype3'}
[OrderedDict([('id', 49), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 50), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 51), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 49), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 50), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 51), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])
OrderedDict([('id', 31), ('kind', 'bagtype1')])
OrderedDict([('id', 31), ('kind', 'bagtype1')])
OrderedDict([('id', 32), ('kind', 'bagtype2')])
kittype.data {'id': 16, 'kind': 'kittype1'}
[OrderedDict([('id', 31), ('kind', 'bagtype1')]), OrderedDict([('id', 32), ('kind', 'bagtype2')]), OrderedDict([('id', 33), ('kind', 'bagtype3')])]
OrderedDict([('id', 31), ('kind', 'bagtype1')])
OrderedDict([('id', 31), ('kind', 'bagtype1')])
OrderedDict([('id', 32), ('kind', 'bagtype2')])
kittype.data {'id': 17, 'kind': 'kittype2'}
[OrderedDict([('id', 31), ('kind', 'bagtype1')]), OrderedDict([('id', 32), ('kind', 'bagtype2')]), OrderedDict([('id', 33), ('kind', 'bagtype3')])]
OrderedDict([('id', 31), ('kind', 'bagtype1')])
OrderedDict([('id', 31), ('kind', 'bagtype1')])
OrderedDict([('id', 32), ('kind', 'bagtype2')])
OrderedDict([('id', 31), ('kind', 'bagtype1')])
OrderedDict([('id', 32), ('kind', 'bagtype2')])
OrderedDict([('id', 33), ('kind', 'bagtype3')])
All kitypes: [OrderedDict([('id', 16), ('kind', 'kittype1')]), OrderedDict([('id', 17), ('kind', 'kittype2')])]
OrderedDict([('id', 16), ('kind', 'kittype1')])
OrderedDict([('id', 16), ('kind', 'kittype1')])
OrderedDict([('id', 17), ('kind', 'kittype2')])
kittypes: [OrderedDict([('id', 16), ('kind', 'kittype1')]), OrderedDict([('id', 17), ('kind', 'kittype2')])]
OrderedDict([('id', 16), ('kind', 'kittype1')])
kittype: OrderedDict([('id', 16), ('kind', 'kittype1')])
<Response status_code=200, "application/json">
{'kittype': 16, 'potential_kits': 10, 'potential_kits_by_bag': {'bagtype1': 10, 'bagtype2': 10}}
{'kittype': 16, 'potential_kits': 10, 'potential_kits_by_bag': {'bagtype1': 10, 'bagtype2': 10}}

]]>
</system-out></testcase><testcase classname="features.kitseller.Kit seller" name="US7: As a kit seller, I want to add a kit, so that I can manage new kits that I start selling." status="passed" time="0.078278"><system-out>
<![CDATA[
@scenario.begin
  Scenario: US7: As a kit seller, I want to add a kit, so that I can manage new kits that I start selling.
    Given a set of specific parts ... passed in 0.005s
      | name  | description  | quantity |
      | partA | descriptionA | 12       |
      | partB | descriptionB | 8        |
      | partC | descriptionC | 5        |
    Given a bag type "bagtype1" with parts list of ... passed in 0.011s
      | name | part  | quantity |
      | A    | partA | 1        |
      | B    | partB | 2        |
    Given a bag type "bagtype2" with parts list of ... passed in 0.010s
      | name | part  | quantity |
      | A    | partB | 2        |
      | B    | partC | 3        |
    Given a bag type "bagtype3" with parts list of ... passed in 0.006s
      | name | part  | quantity |
      | A    | partC | 1        |
    Given a set of specific bags ... passed in 0.006s
      | name | kind     | quantity | complete |
      | AB   | bagtype1 | 10       | X        |
      | AB   | bagtype2 | 10       | X        |
    Given a kit type "kittype1" with bags list of ... passed in 0.009s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    Given a kit type "kittype2" with bags list of ... passed in 0.013s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 2        |
      | C    | bagtype3 | 3        |
    Given a set of specific kits ... passed in 0.006s
      | name | kind     | quantity | complete |
      | A    | kittype1 | 10       |          |
      | ABC  | kittype2 | 11       | X        |
    When I create a kit type "kittype4" with bags list of ... passed in 0.010s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    And I read all "kittype" ... passed in 0.001s
    Then the last item should have "kind" equal to "kittype4" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
bagtype.data {'id': 34, 'kind': 'bagtype1'}
[OrderedDict([('id', 52), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 53), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 54), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 52), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 52), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 53), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
bagtype.data {'id': 35, 'kind': 'bagtype2'}
[OrderedDict([('id', 52), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 53), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 54), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 52), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 53), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 52), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 53), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 54), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])
bagtype.data {'id': 36, 'kind': 'bagtype3'}
[OrderedDict([('id', 52), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 53), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 54), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 52), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 53), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 54), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])
OrderedDict([('id', 34), ('kind', 'bagtype1')])
OrderedDict([('id', 34), ('kind', 'bagtype1')])
OrderedDict([('id', 35), ('kind', 'bagtype2')])
kittype.data {'id': 18, 'kind': 'kittype1'}
[OrderedDict([('id', 34), ('kind', 'bagtype1')]), OrderedDict([('id', 35), ('kind', 'bagtype2')]), OrderedDict([('id', 36), ('kind', 'bagtype3')])]
OrderedDict([('id', 34), ('kind', 'bagtype1')])
OrderedDict([('id', 34), ('kind', 'bagtype1')])
OrderedDict([('id', 35), ('kind', 'bagtype2')])
kittype.data {'id': 19, 'kind': 'kittype2'}
[OrderedDict([('id', 34), ('kind', 'bagtype1')]), OrderedDict([('id', 35), ('kind', 'bagtype2')]), OrderedDict([('id', 36), ('kind', 'bagtype3')])]
OrderedDict([('id', 34), ('kind', 'bagtype1')])
OrderedDict([('id', 34), ('kind', 'bagtype1')])
OrderedDict([('id', 35), ('kind', 'bagtype2')])
OrderedDict([('id', 34), ('kind', 'bagtype1')])
OrderedDict([('id', 35), ('kind', 'bagtype2')])
OrderedDict([('id', 36), ('kind', 'bagtype3')])
All kitypes: [OrderedDict([('id', 18), ('kind', 'kittype1')]), OrderedDict([('id', 19), ('kind', 'kittype2')])]
OrderedDict([('id', 18), ('kind', 'kittype1')])
OrderedDict([('id', 18), ('kind', 'kittype1')])
OrderedDict([('id', 19), ('kind', 'kittype2')])
kittype.data {'id': 20, 'kind': 'kittype4'}
[OrderedDict([('id', 34), ('kind', 'bagtype1')]), OrderedDict([('id', 35), ('kind', 'bagtype2')]), OrderedDict([('id', 36), ('kind', 'bagtype3')])]
OrderedDict([('id', 34), ('kind', 'bagtype1')])
OrderedDict([('id', 34), ('kind', 'bagtype1')])
OrderedDict([('id', 35), ('kind', 'bagtype2')])
All kittype: [OrderedDict([('id', 18), ('kind', 'kittype1')]), OrderedDict([('id', 19), ('kind', 'kittype2')]), OrderedDict([('id', 20), ('kind', 'kittype4')])]
[OrderedDict([('id', 18), ('kind', 'kittype1')]), OrderedDict([('id', 19), ('kind', 'kittype2')]), OrderedDict([('id', 20), ('kind', 'kittype4')])]

]]>
</system-out></testcase><testcase classname="features.kitseller.Kit seller" name="US8: As a kit seller, I want to remove a kit, so that I can manage old kits that I no longer sell." status="passed" time="0.084754"><system-out>
<![CDATA[
@scenario.begin
  Scenario: US8: As a kit seller, I want to remove a kit, so that I can manage old kits that I no longer sell.
    Given a set of specific parts ... passed in 0.008s
      | name  | description  | quantity |
      | partA | descriptionA | 12       |
      | partB | descriptionB | 8        |
      | partC | descriptionC | 5        |
    Given a bag type "bagtype1" with parts list of ... passed in 0.011s
      | name | part  | quantity |
      | A    | partA | 1        |
      | B    | partB | 2        |
    Given a bag type "bagtype2" with parts list of ... passed in 0.011s
      | name | part  | quantity |
      | A    | partB | 2        |
      | B    | partC | 3        |
    Given a bag type "bagtype3" with parts list of ... passed in 0.007s
      | name | part  | quantity |
      | A    | partC | 1        |
    Given a set of specific bags ... passed in 0.006s
      | name | kind     | quantity | complete |
      | AB   | bagtype1 | 10       | X        |
      | AB   | bagtype2 | 10       | X        |
    Given a kit type "kittype1" with bags list of ... passed in 0.011s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    Given a kit type "kittype2" with bags list of ... passed in 0.016s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 2        |
      | C    | bagtype3 | 3        |
    Given a set of specific kits ... passed in 0.007s
      | name | kind     | quantity | complete |
      | A    | kittype1 | 10       |          |
      | ABC  | kittype2 | 11       | X        |
    When I read all "kittype" ... passed in 0.001s
    When I delete the first "kittype" ... passed in 0.005s
    And I read all "kittype" ... passed in 0.001s
    Then the first item should have "kind" equal to "kittype2" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
bagtype.data {'id': 37, 'kind': 'bagtype1'}
[OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 57), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
bagtype.data {'id': 38, 'kind': 'bagtype2'}
[OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 57), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 57), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])
bagtype.data {'id': 39, 'kind': 'bagtype3'}
[OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)]), OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)]), OrderedDict([('id', 57), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])]
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12)])
OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8)])
OrderedDict([('id', 57), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 5)])
OrderedDict([('id', 37), ('kind', 'bagtype1')])
OrderedDict([('id', 37), ('kind', 'bagtype1')])
OrderedDict([('id', 38), ('kind', 'bagtype2')])
kittype.data {'id': 21, 'kind': 'kittype1'}
[OrderedDict([('id', 37), ('kind', 'bagtype1')]), OrderedDict([('id', 38), ('kind', 'bagtype2')]), OrderedDict([('id', 39), ('kind', 'bagtype3')])]
OrderedDict([('id', 37), ('kind', 'bagtype1')])
OrderedDict([('id', 37), ('kind', 'bagtype1')])
OrderedDict([('id', 38), ('kind', 'bagtype2')])
kittype.data {'id': 22, 'kind': 'kittype2'}
[OrderedDict([('id', 37), ('kind', 'bagtype1')]), OrderedDict([('id', 38), ('kind', 'bagtype2')]), OrderedDict([('id', 39), ('kind', 'bagtype3')])]
OrderedDict([('id', 37), ('kind', 'bagtype1')])
OrderedDict([('id', 37), ('kind', 'bagtype1')])
OrderedDict([('id', 38), ('kind', 'bagtype2')])
OrderedDict([('id', 37), ('kind', 'bagtype1')])
OrderedDict([('id', 38), ('kind', 'bagtype2')])
OrderedDict([('id', 39), ('kind', 'bagtype3')])
All kitypes: [OrderedDict([('id', 21), ('kind', 'kittype1')]), OrderedDict([('id', 22), ('kind', 'kittype2')])]
OrderedDict([('id', 21), ('kind', 'kittype1')])
OrderedDict([('id', 21), ('kind', 'kittype1')])
OrderedDict([('id', 22), ('kind', 'kittype2')])
All kittype: [OrderedDict([('id', 21), ('kind', 'kittype1')]), OrderedDict([('id', 22), ('kind', 'kittype2')])]
<Response status_code=204>
None
All kittype: [OrderedDict([('id', 22), ('kind', 'kittype2')])]
[OrderedDict([('id', 22), ('kind', 'kittype2')])]

]]>
</system-out></testcase></testsuite>