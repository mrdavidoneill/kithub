<testsuite name="features.kitpacker.Kit packer" tests="7" errors="0" failures="0" skipped="0" time="0.757292" timestamp="2022-06-21T12:01:41.893417" hostname="legion-linux"><testcase classname="features.kitpacker.Kit packer" name="US9: As a kit packer, I want to see a bag inventory, so that I know how many bags are currently ready." status="passed" time="0.098505"><system-out>
<![CDATA[
@scenario.begin
  Scenario: US9: As a kit packer, I want to see a bag inventory, so that I know how many bags are currently ready.
    Given a set of specific parts ... passed in 0.009s
      | name  | description  | quantity |
      | partA | descriptionA | 12       |
      | partB | descriptionB | 8        |
      | partC | descriptionC | 1        |
      | partD | descriptionC | 4        |
    Given a bag type "bagtype1" with parts list of ... passed in 0.015s
      | name | part  | quantity |
      | A    | partA | 1        |
      | B    | partB | 2        |
      | C    | partC | 1        |
    Given a bag type "bagtype2" with parts list of ... passed in 0.014s
      | name | part  | quantity |
      | A    | partB | 2        |
      | B    | partC | 3        |
    Given a bag type "bagtype3" with parts list of ... passed in 0.011s
      | name | part  | quantity |
      | A    | partC | 1        |
    Given a set of specific bags ... passed in 0.013s
      | name | kind     | quantity | complete |
      | AB   | bagtype1 | 5        |          |
      | ABC  | bagtype1 | 10       | X        |
      |      | bagtype2 | 10       |          |
      | AB   | bagtype2 | 11       | X        |
    Given a kit type "kittype1" with bags list of ... passed in 0.012s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    Given a kit type "kittype2" with bags list of ... passed in 0.015s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 2        |
      | C    | bagtype3 | 3        |
    Given a set of specific kits ... passed in 0.006s
      | name | kind     | quantity | complete |
      | A    | kittype1 | 10       |          |
      | ABC  | kittype2 | 11       | X        |
    When I read all "bag" ... passed in 0.002s
    Then the first item should have "name" equal to "AB" ... passed in 0.000s
    And the first item should have "quantity" equal to number "5" ... passed in 0.000s
    But the last item should have "name" equal to "AB" ... passed in 0.000s
    And the last item should have "quantity" equal to number "11" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
bagtype.data {'id': 16, 'kind': 'bagtype1', 'ingredients': []}
[OrderedDict([('id', 31), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 32), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 33), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 34), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 31), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 31), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 32), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 31), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 32), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 33), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 17, 'kind': 'bagtype2', 'ingredients': []}
[OrderedDict([('id', 31), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 32), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 33), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 34), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 31), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 32), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 31), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 32), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 33), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 18, 'kind': 'bagtype3', 'ingredients': []}
[OrderedDict([('id', 31), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 32), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 33), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 34), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 31), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 32), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 33), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
OrderedDict([('id', 16), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 46), ('name', 'A'), ('quantity', 1), ('bagtype', 16), ('part', 31)]), OrderedDict([('id', 47), ('name', 'B'), ('quantity', 2), ('bagtype', 16), ('part', 32)]), OrderedDict([('id', 48), ('name', 'C'), ('quantity', 1), ('bagtype', 16), ('part', 33)])])])
OrderedDict([('id', 16), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 46), ('name', 'A'), ('quantity', 1), ('bagtype', 16), ('part', 31)]), OrderedDict([('id', 47), ('name', 'B'), ('quantity', 2), ('bagtype', 16), ('part', 32)]), OrderedDict([('id', 48), ('name', 'C'), ('quantity', 1), ('bagtype', 16), ('part', 33)])])])
OrderedDict([('id', 16), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 46), ('name', 'A'), ('quantity', 1), ('bagtype', 16), ('part', 31)]), OrderedDict([('id', 47), ('name', 'B'), ('quantity', 2), ('bagtype', 16), ('part', 32)]), OrderedDict([('id', 48), ('name', 'C'), ('quantity', 1), ('bagtype', 16), ('part', 33)])])])
OrderedDict([('id', 17), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 49), ('name', 'A'), ('quantity', 2), ('bagtype', 17), ('part', 32)]), OrderedDict([('id', 50), ('name', 'B'), ('quantity', 3), ('bagtype', 17), ('part', 33)])])])
OrderedDict([('id', 16), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 46), ('name', 'A'), ('quantity', 1), ('bagtype', 16), ('part', 31)]), OrderedDict([('id', 47), ('name', 'B'), ('quantity', 2), ('bagtype', 16), ('part', 32)]), OrderedDict([('id', 48), ('name', 'C'), ('quantity', 1), ('bagtype', 16), ('part', 33)])])])
OrderedDict([('id', 17), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 49), ('name', 'A'), ('quantity', 2), ('bagtype', 17), ('part', 32)]), OrderedDict([('id', 50), ('name', 'B'), ('quantity', 3), ('bagtype', 17), ('part', 33)])])])
kittype.data {'id': 6, 'kind': 'kittype1'}
[OrderedDict([('id', 16), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 46), ('name', 'A'), ('quantity', 1), ('bagtype', 16), ('part', 31)]), OrderedDict([('id', 47), ('name', 'B'), ('quantity', 2), ('bagtype', 16), ('part', 32)]), OrderedDict([('id', 48), ('name', 'C'), ('quantity', 1), ('bagtype', 16), ('part', 33)])])]), OrderedDict([('id', 17), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 49), ('name', 'A'), ('quantity', 2), ('bagtype', 17), ('part', 32)]), OrderedDict([('id', 50), ('name', 'B'), ('quantity', 3), ('bagtype', 17), ('part', 33)])])]), OrderedDict([('id', 18), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 51), ('name', 'A'), ('quantity', 1), ('bagtype', 18), ('part', 33)])])])]
OrderedDict([('id', 16), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 46), ('name', 'A'), ('quantity', 1), ('bagtype', 16), ('part', 31)]), OrderedDict([('id', 47), ('name', 'B'), ('quantity', 2), ('bagtype', 16), ('part', 32)]), OrderedDict([('id', 48), ('name', 'C'), ('quantity', 1), ('bagtype', 16), ('part', 33)])])])
OrderedDict([('id', 16), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 46), ('name', 'A'), ('quantity', 1), ('bagtype', 16), ('part', 31)]), OrderedDict([('id', 47), ('name', 'B'), ('quantity', 2), ('bagtype', 16), ('part', 32)]), OrderedDict([('id', 48), ('name', 'C'), ('quantity', 1), ('bagtype', 16), ('part', 33)])])])
OrderedDict([('id', 17), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 49), ('name', 'A'), ('quantity', 2), ('bagtype', 17), ('part', 32)]), OrderedDict([('id', 50), ('name', 'B'), ('quantity', 3), ('bagtype', 17), ('part', 33)])])])
kittype.data {'id': 7, 'kind': 'kittype2'}
[OrderedDict([('id', 16), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 46), ('name', 'A'), ('quantity', 1), ('bagtype', 16), ('part', 31)]), OrderedDict([('id', 47), ('name', 'B'), ('quantity', 2), ('bagtype', 16), ('part', 32)]), OrderedDict([('id', 48), ('name', 'C'), ('quantity', 1), ('bagtype', 16), ('part', 33)])])]), OrderedDict([('id', 17), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 49), ('name', 'A'), ('quantity', 2), ('bagtype', 17), ('part', 32)]), OrderedDict([('id', 50), ('name', 'B'), ('quantity', 3), ('bagtype', 17), ('part', 33)])])]), OrderedDict([('id', 18), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 51), ('name', 'A'), ('quantity', 1), ('bagtype', 18), ('part', 33)])])])]
OrderedDict([('id', 16), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 46), ('name', 'A'), ('quantity', 1), ('bagtype', 16), ('part', 31)]), OrderedDict([('id', 47), ('name', 'B'), ('quantity', 2), ('bagtype', 16), ('part', 32)]), OrderedDict([('id', 48), ('name', 'C'), ('quantity', 1), ('bagtype', 16), ('part', 33)])])])
OrderedDict([('id', 16), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 46), ('name', 'A'), ('quantity', 1), ('bagtype', 16), ('part', 31)]), OrderedDict([('id', 47), ('name', 'B'), ('quantity', 2), ('bagtype', 16), ('part', 32)]), OrderedDict([('id', 48), ('name', 'C'), ('quantity', 1), ('bagtype', 16), ('part', 33)])])])
OrderedDict([('id', 17), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 49), ('name', 'A'), ('quantity', 2), ('bagtype', 17), ('part', 32)]), OrderedDict([('id', 50), ('name', 'B'), ('quantity', 3), ('bagtype', 17), ('part', 33)])])])
OrderedDict([('id', 16), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 46), ('name', 'A'), ('quantity', 1), ('bagtype', 16), ('part', 31)]), OrderedDict([('id', 47), ('name', 'B'), ('quantity', 2), ('bagtype', 16), ('part', 32)]), OrderedDict([('id', 48), ('name', 'C'), ('quantity', 1), ('bagtype', 16), ('part', 33)])])])
OrderedDict([('id', 17), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 49), ('name', 'A'), ('quantity', 2), ('bagtype', 17), ('part', 32)]), OrderedDict([('id', 50), ('name', 'B'), ('quantity', 3), ('bagtype', 17), ('part', 33)])])])
OrderedDict([('id', 18), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 51), ('name', 'A'), ('quantity', 1), ('bagtype', 18), ('part', 33)])])])
All kitypes: [OrderedDict([('id', 6), ('kind', 'kittype1')]), OrderedDict([('id', 7), ('kind', 'kittype2')])]
OrderedDict([('id', 6), ('kind', 'kittype1')])
OrderedDict([('id', 6), ('kind', 'kittype1')])
OrderedDict([('id', 7), ('kind', 'kittype2')])
All bag: [OrderedDict([('id', 27), ('name', 'AB'), ('quantity', 5), ('complete', False), ('kind', 16)]), OrderedDict([('id', 28), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 16)]), OrderedDict([('id', 29), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 17)]), OrderedDict([('id', 30), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 17)])]
[OrderedDict([('id', 27), ('name', 'AB'), ('quantity', 5), ('complete', False), ('kind', 16)]), OrderedDict([('id', 28), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 16)]), OrderedDict([('id', 29), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 17)]), OrderedDict([('id', 30), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 17)])]
[OrderedDict([('id', 27), ('name', 'AB'), ('quantity', 5), ('complete', False), ('kind', 16)]), OrderedDict([('id', 28), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 16)]), OrderedDict([('id', 29), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 17)]), OrderedDict([('id', 30), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 17)])]
[OrderedDict([('id', 27), ('name', 'AB'), ('quantity', 5), ('complete', False), ('kind', 16)]), OrderedDict([('id', 28), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 16)]), OrderedDict([('id', 29), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 17)]), OrderedDict([('id', 30), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 17)])]
[OrderedDict([('id', 27), ('name', 'AB'), ('quantity', 5), ('complete', False), ('kind', 16)]), OrderedDict([('id', 28), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 16)]), OrderedDict([('id', 29), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 17)]), OrderedDict([('id', 30), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 17)])]

]]>
</system-out></testcase><testcase classname="features.kitpacker.Kit packer" name="US10: As a kit packer, I want to update a bag inventory, so that I can pack bags and prepare" status="passed" time="0.129025"><system-out>
<![CDATA[
@scenario.begin
  Scenario: US10: As a kit packer, I want to update a bag inventory, so that I can pack bags and prepare
    Given a set of specific parts ... passed in 0.010s
      | name  | description  | quantity |
      | partA | descriptionA | 12       |
      | partB | descriptionB | 8        |
      | partC | descriptionC | 1        |
      | partD | descriptionC | 4        |
    Given a bag type "bagtype1" with parts list of ... passed in 0.017s
      | name | part  | quantity |
      | A    | partA | 1        |
      | B    | partB | 2        |
      | C    | partC | 1        |
    Given a bag type "bagtype2" with parts list of ... passed in 0.013s
      | name | part  | quantity |
      | A    | partB | 2        |
      | B    | partC | 3        |
    Given a bag type "bagtype3" with parts list of ... passed in 0.010s
      | name | part  | quantity |
      | A    | partC | 1        |
    Given a set of specific bags ... passed in 0.014s
      | name | kind     | quantity | complete |
      | AB   | bagtype1 | 5        |          |
      | ABC  | bagtype1 | 10       | X        |
      |      | bagtype2 | 10       |          |
      | AB   | bagtype2 | 11       | X        |
    Given a kit type "kittype1" with bags list of ... passed in 0.015s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    Given a kit type "kittype2" with bags list of ... passed in 0.016s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 2        |
      | C    | bagtype3 | 3        |
    Given a set of specific kits ... passed in 0.006s
      | name | kind     | quantity | complete |
      | A    | kittype1 | 10       |          |
      | ABC  | kittype2 | 11       | X        |
    When I read all "bag" ... passed in 0.002s
    When I update the first bag as follows ... passed in 0.008s
      | name | kind     | quantity | complete |
      | ABC  | bagtype1 | 20       | X        |
    And I read all "bag" ... passed in 0.002s
    Then the first item should have "name" equal to "ABC" ... passed in 0.000s
    And the first item should have "quantity" equal to number "20" ... passed in 0.000s
    When I create "12" "bag" of "bagtype2" "bagtype" with name "A" ... passed in 0.006s
    And I read all "bag" ... passed in 0.002s
    Then the last item should have "name" equal to "A" ... passed in 0.000s
    And the last item should have "quantity" equal to number "12" ... passed in 0.000s
    When I read all "bag" ... passed in 0.002s
    When I delete the first "bag" ... passed in 0.004s
    And I read all "bag" ... passed in 0.002s
    Then the first item should have "name" equal to "ABC" ... passed in 0.000s
    And the first item should have "quantity" equal to number "10" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
bagtype.data {'id': 19, 'kind': 'bagtype1', 'ingredients': []}
[OrderedDict([('id', 35), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 36), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 37), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 38), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 35), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 35), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 36), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 35), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 36), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 37), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 20, 'kind': 'bagtype2', 'ingredients': []}
[OrderedDict([('id', 35), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 36), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 37), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 38), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 35), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 36), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 35), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 36), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 37), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 21, 'kind': 'bagtype3', 'ingredients': []}
[OrderedDict([('id', 35), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 36), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 37), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 38), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 35), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 36), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 37), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])])
OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])])
OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])])
OrderedDict([('id', 20), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 55), ('name', 'A'), ('quantity', 2), ('bagtype', 20), ('part', 36)]), OrderedDict([('id', 56), ('name', 'B'), ('quantity', 3), ('bagtype', 20), ('part', 37)])])])
OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])])
OrderedDict([('id', 20), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 55), ('name', 'A'), ('quantity', 2), ('bagtype', 20), ('part', 36)]), OrderedDict([('id', 56), ('name', 'B'), ('quantity', 3), ('bagtype', 20), ('part', 37)])])])
kittype.data {'id': 8, 'kind': 'kittype1'}
[OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])]), OrderedDict([('id', 20), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 55), ('name', 'A'), ('quantity', 2), ('bagtype', 20), ('part', 36)]), OrderedDict([('id', 56), ('name', 'B'), ('quantity', 3), ('bagtype', 20), ('part', 37)])])]), OrderedDict([('id', 21), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 57), ('name', 'A'), ('quantity', 1), ('bagtype', 21), ('part', 37)])])])]
OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])])
OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])])
OrderedDict([('id', 20), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 55), ('name', 'A'), ('quantity', 2), ('bagtype', 20), ('part', 36)]), OrderedDict([('id', 56), ('name', 'B'), ('quantity', 3), ('bagtype', 20), ('part', 37)])])])
kittype.data {'id': 9, 'kind': 'kittype2'}
[OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])]), OrderedDict([('id', 20), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 55), ('name', 'A'), ('quantity', 2), ('bagtype', 20), ('part', 36)]), OrderedDict([('id', 56), ('name', 'B'), ('quantity', 3), ('bagtype', 20), ('part', 37)])])]), OrderedDict([('id', 21), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 57), ('name', 'A'), ('quantity', 1), ('bagtype', 21), ('part', 37)])])])]
OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])])
OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])])
OrderedDict([('id', 20), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 55), ('name', 'A'), ('quantity', 2), ('bagtype', 20), ('part', 36)]), OrderedDict([('id', 56), ('name', 'B'), ('quantity', 3), ('bagtype', 20), ('part', 37)])])])
OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])])
OrderedDict([('id', 20), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 55), ('name', 'A'), ('quantity', 2), ('bagtype', 20), ('part', 36)]), OrderedDict([('id', 56), ('name', 'B'), ('quantity', 3), ('bagtype', 20), ('part', 37)])])])
OrderedDict([('id', 21), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 57), ('name', 'A'), ('quantity', 1), ('bagtype', 21), ('part', 37)])])])
All kitypes: [OrderedDict([('id', 8), ('kind', 'kittype1')]), OrderedDict([('id', 9), ('kind', 'kittype2')])]
OrderedDict([('id', 8), ('kind', 'kittype1')])
OrderedDict([('id', 8), ('kind', 'kittype1')])
OrderedDict([('id', 9), ('kind', 'kittype2')])
All bag: [OrderedDict([('id', 31), ('name', 'AB'), ('quantity', 5), ('complete', False), ('kind', 19)]), OrderedDict([('id', 32), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 19)]), OrderedDict([('id', 33), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 20)]), OrderedDict([('id', 34), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 20)])]
OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])])
All bag: [OrderedDict([('id', 31), ('name', 'ABC'), ('quantity', 20), ('complete', True), ('kind', 19)]), OrderedDict([('id', 32), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 19)]), OrderedDict([('id', 33), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 20)]), OrderedDict([('id', 34), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 20)])]
[OrderedDict([('id', 31), ('name', 'ABC'), ('quantity', 20), ('complete', True), ('kind', 19)]), OrderedDict([('id', 32), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 19)]), OrderedDict([('id', 33), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 20)]), OrderedDict([('id', 34), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 20)])]
[OrderedDict([('id', 31), ('name', 'ABC'), ('quantity', 20), ('complete', True), ('kind', 19)]), OrderedDict([('id', 32), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 19)]), OrderedDict([('id', 33), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 20)]), OrderedDict([('id', 34), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 20)])]
OrderedDict([('id', 19), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 52), ('name', 'A'), ('quantity', 1), ('bagtype', 19), ('part', 35)]), OrderedDict([('id', 53), ('name', 'B'), ('quantity', 2), ('bagtype', 19), ('part', 36)]), OrderedDict([('id', 54), ('name', 'C'), ('quantity', 1), ('bagtype', 19), ('part', 37)])])])
OrderedDict([('id', 20), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 55), ('name', 'A'), ('quantity', 2), ('bagtype', 20), ('part', 36)]), OrderedDict([('id', 56), ('name', 'B'), ('quantity', 3), ('bagtype', 20), ('part', 37)])])])
All bag: [OrderedDict([('id', 31), ('name', 'ABC'), ('quantity', 20), ('complete', True), ('kind', 19)]), OrderedDict([('id', 32), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 19)]), OrderedDict([('id', 33), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 20)]), OrderedDict([('id', 34), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 20)]), OrderedDict([('id', 35), ('name', 'A'), ('quantity', 12), ('complete', False), ('kind', 20)])]
[OrderedDict([('id', 31), ('name', 'ABC'), ('quantity', 20), ('complete', True), ('kind', 19)]), OrderedDict([('id', 32), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 19)]), OrderedDict([('id', 33), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 20)]), OrderedDict([('id', 34), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 20)]), OrderedDict([('id', 35), ('name', 'A'), ('quantity', 12), ('complete', False), ('kind', 20)])]
[OrderedDict([('id', 31), ('name', 'ABC'), ('quantity', 20), ('complete', True), ('kind', 19)]), OrderedDict([('id', 32), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 19)]), OrderedDict([('id', 33), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 20)]), OrderedDict([('id', 34), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 20)]), OrderedDict([('id', 35), ('name', 'A'), ('quantity', 12), ('complete', False), ('kind', 20)])]
All bag: [OrderedDict([('id', 31), ('name', 'ABC'), ('quantity', 20), ('complete', True), ('kind', 19)]), OrderedDict([('id', 32), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 19)]), OrderedDict([('id', 33), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 20)]), OrderedDict([('id', 34), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 20)]), OrderedDict([('id', 35), ('name', 'A'), ('quantity', 12), ('complete', False), ('kind', 20)])]
<Response status_code=204>
None
All bag: [OrderedDict([('id', 32), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 19)]), OrderedDict([('id', 33), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 20)]), OrderedDict([('id', 34), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 20)]), OrderedDict([('id', 35), ('name', 'A'), ('quantity', 12), ('complete', False), ('kind', 20)])]
[OrderedDict([('id', 32), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 19)]), OrderedDict([('id', 33), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 20)]), OrderedDict([('id', 34), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 20)]), OrderedDict([('id', 35), ('name', 'A'), ('quantity', 12), ('complete', False), ('kind', 20)])]
[OrderedDict([('id', 32), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 19)]), OrderedDict([('id', 33), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 20)]), OrderedDict([('id', 34), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 20)]), OrderedDict([('id', 35), ('name', 'A'), ('quantity', 12), ('complete', False), ('kind', 20)])]

]]>
</system-out></testcase><testcase classname="features.kitpacker.Kit packer" name="US11: As a kit packer, I want to see a list of unfinished bags, so that I know which parts are missing from bags that have been started." status="passed" time="0.123686"><system-out>
<![CDATA[
@scenario.begin
  Scenario: US11: As a kit packer, I want to see a list of unfinished bags, so that I know which parts are missing from bags that have been started.
    Given a set of specific parts ... passed in 0.010s
      | name  | description  | quantity |
      | partA | descriptionA | 12       |
      | partB | descriptionB | 8        |
      | partC | descriptionC | 1        |
      | partD | descriptionC | 4        |
    Given a bag type "bagtype1" with parts list of ... passed in 0.017s
      | name | part  | quantity |
      | A    | partA | 1        |
      | B    | partB | 2        |
      | C    | partC | 1        |
    Given a bag type "bagtype2" with parts list of ... passed in 0.014s
      | name | part  | quantity |
      | A    | partB | 2        |
      | B    | partC | 3        |
    Given a bag type "bagtype3" with parts list of ... passed in 0.010s
      | name | part  | quantity |
      | A    | partC | 1        |
    Given a set of specific bags ... passed in 0.014s
      | name | kind     | quantity | complete |
      | AB   | bagtype1 | 5        |          |
      | ABC  | bagtype1 | 10       | X        |
      |      | bagtype2 | 10       |          |
      | AB   | bagtype2 | 11       | X        |
    Given a kit type "kittype1" with bags list of ... passed in 0.016s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    Given a kit type "kittype2" with bags list of ... passed in 0.018s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 2        |
      | C    | bagtype3 | 3        |
    Given a set of specific kits ... passed in 0.007s
      | name | kind     | quantity | complete |
      | A    | kittype1 | 10       |          |
      | ABC  | kittype2 | 11       | X        |
    When I request unfinished bags ... passed in 0.010s
    Then "bagtype2" "bagtype" should need to buy "12" "partB" ... passed in 0.004s
    And "bagtype2" "bagtype" should need to buy "29" "partC" ... passed in 0.004s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
bagtype.data {'id': 22, 'kind': 'bagtype1', 'ingredients': []}
[OrderedDict([('id', 39), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 40), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 41), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 42), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 39), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 39), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 40), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 39), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 40), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 41), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 23, 'kind': 'bagtype2', 'ingredients': []}
[OrderedDict([('id', 39), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 40), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 41), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 42), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 39), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 40), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 39), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 40), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 41), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 24, 'kind': 'bagtype3', 'ingredients': []}
[OrderedDict([('id', 39), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 40), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 41), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 42), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 39), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 40), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 41), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])])
OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])])
OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])])
OrderedDict([('id', 23), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 61), ('name', 'A'), ('quantity', 2), ('bagtype', 23), ('part', 40)]), OrderedDict([('id', 62), ('name', 'B'), ('quantity', 3), ('bagtype', 23), ('part', 41)])])])
OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])])
OrderedDict([('id', 23), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 61), ('name', 'A'), ('quantity', 2), ('bagtype', 23), ('part', 40)]), OrderedDict([('id', 62), ('name', 'B'), ('quantity', 3), ('bagtype', 23), ('part', 41)])])])
kittype.data {'id': 10, 'kind': 'kittype1'}
[OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])]), OrderedDict([('id', 23), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 61), ('name', 'A'), ('quantity', 2), ('bagtype', 23), ('part', 40)]), OrderedDict([('id', 62), ('name', 'B'), ('quantity', 3), ('bagtype', 23), ('part', 41)])])]), OrderedDict([('id', 24), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 63), ('name', 'A'), ('quantity', 1), ('bagtype', 24), ('part', 41)])])])]
OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])])
OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])])
OrderedDict([('id', 23), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 61), ('name', 'A'), ('quantity', 2), ('bagtype', 23), ('part', 40)]), OrderedDict([('id', 62), ('name', 'B'), ('quantity', 3), ('bagtype', 23), ('part', 41)])])])
kittype.data {'id': 11, 'kind': 'kittype2'}
[OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])]), OrderedDict([('id', 23), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 61), ('name', 'A'), ('quantity', 2), ('bagtype', 23), ('part', 40)]), OrderedDict([('id', 62), ('name', 'B'), ('quantity', 3), ('bagtype', 23), ('part', 41)])])]), OrderedDict([('id', 24), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 63), ('name', 'A'), ('quantity', 1), ('bagtype', 24), ('part', 41)])])])]
OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])])
OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])])
OrderedDict([('id', 23), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 61), ('name', 'A'), ('quantity', 2), ('bagtype', 23), ('part', 40)]), OrderedDict([('id', 62), ('name', 'B'), ('quantity', 3), ('bagtype', 23), ('part', 41)])])])
OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])])
OrderedDict([('id', 23), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 61), ('name', 'A'), ('quantity', 2), ('bagtype', 23), ('part', 40)]), OrderedDict([('id', 62), ('name', 'B'), ('quantity', 3), ('bagtype', 23), ('part', 41)])])])
OrderedDict([('id', 24), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 63), ('name', 'A'), ('quantity', 1), ('bagtype', 24), ('part', 41)])])])
All kitypes: [OrderedDict([('id', 10), ('kind', 'kittype1')]), OrderedDict([('id', 11), ('kind', 'kittype2')])]
OrderedDict([('id', 10), ('kind', 'kittype1')])
OrderedDict([('id', 10), ('kind', 'kittype1')])
OrderedDict([('id', 11), ('kind', 'kittype2')])
HELLO
bagtypes: <QuerySet [<BagType: bagtype1>, <BagType: bagtype2>, <BagType: bagtype3>]>
This bagtype is: bagtype1
Unfinshed bags: <QuerySet [<Bag: bagtype1 - AB x 5>]>
This bagtype is: bagtype2
Unfinshed bags: <QuerySet [<Bag: bagtype2 -  x 10>]>
This bagtype is: bagtype3
Unfinshed bags: <QuerySet []>
<Response status_code=200, "application/json">
[{'bagtype': 22, 'parts_to_buy': {}, 'parts_to_finish': {}}, {'bagtype': 23, 'parts_to_buy': {'partB': 12, 'partC': 29}, 'parts_to_finish': {'partB': 20, 'partC': 30}}, {'bagtype': 24, 'parts_to_buy': {}, 'parts_to_finish': {}}]
OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])])
OrderedDict([('id', 23), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 61), ('name', 'A'), ('quantity', 2), ('bagtype', 23), ('part', 40)]), OrderedDict([('id', 62), ('name', 'B'), ('quantity', 3), ('bagtype', 23), ('part', 41)])])])
response [{'bagtype': 22, 'parts_to_buy': {}, 'parts_to_finish': {}}, {'bagtype': 23, 'parts_to_buy': {'partB': 12, 'partC': 29}, 'parts_to_finish': {'partB': 20, 'partC': 30}}, {'bagtype': 24, 'parts_to_buy': {}, 'parts_to_finish': {}}]
{'bagtype': 22, 'parts_to_buy': {}, 'parts_to_finish': {}}
{'bagtype': 23, 'parts_to_buy': {'partB': 12, 'partC': 29}, 'parts_to_finish': {'partB': 20, 'partC': 30}}
item {'bagtype': 23, 'parts_to_buy': {'partB': 12, 'partC': 29}, 'parts_to_finish': {'partB': 20, 'partC': 30}}
OrderedDict([('id', 22), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 58), ('name', 'A'), ('quantity', 1), ('bagtype', 22), ('part', 39)]), OrderedDict([('id', 59), ('name', 'B'), ('quantity', 2), ('bagtype', 22), ('part', 40)]), OrderedDict([('id', 60), ('name', 'C'), ('quantity', 1), ('bagtype', 22), ('part', 41)])])])
OrderedDict([('id', 23), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 61), ('name', 'A'), ('quantity', 2), ('bagtype', 23), ('part', 40)]), OrderedDict([('id', 62), ('name', 'B'), ('quantity', 3), ('bagtype', 23), ('part', 41)])])])
response [{'bagtype': 22, 'parts_to_buy': {}, 'parts_to_finish': {}}, {'bagtype': 23, 'parts_to_buy': {'partB': 12, 'partC': 29}, 'parts_to_finish': {'partB': 20, 'partC': 30}}, {'bagtype': 24, 'parts_to_buy': {}, 'parts_to_finish': {}}]
{'bagtype': 22, 'parts_to_buy': {}, 'parts_to_finish': {}}
{'bagtype': 23, 'parts_to_buy': {'partB': 12, 'partC': 29}, 'parts_to_finish': {'partB': 20, 'partC': 30}}
item {'bagtype': 23, 'parts_to_buy': {'partB': 12, 'partC': 29}, 'parts_to_finish': {'partB': 20, 'partC': 30}}

]]>
</system-out></testcase><testcase classname="features.kitpacker.Kit packer" name="US12: As a kit packer, I want to divide bags, so that when I find I am low on parts to complete all the bags, I can complete some, keeping track of everything along the way." status="passed" time="0.120464"><system-out>
<![CDATA[
@scenario.begin
  Scenario: US12: As a kit packer, I want to divide bags, so that when I find I am low on parts to complete all the bags, I can complete some, keeping track of everything along the way.
    Given a set of specific parts ... passed in 0.011s
      | name  | description  | quantity |
      | partA | descriptionA | 12       |
      | partB | descriptionB | 8        |
      | partC | descriptionC | 1        |
      | partD | descriptionC | 4        |
    Given a bag type "bagtype1" with parts list of ... passed in 0.019s
      | name | part  | quantity |
      | A    | partA | 1        |
      | B    | partB | 2        |
      | C    | partC | 1        |
    Given a bag type "bagtype2" with parts list of ... passed in 0.015s
      | name | part  | quantity |
      | A    | partB | 2        |
      | B    | partC | 3        |
    Given a bag type "bagtype3" with parts list of ... passed in 0.011s
      | name | part  | quantity |
      | A    | partC | 1        |
    Given a set of specific bags ... passed in 0.014s
      | name | kind     | quantity | complete |
      | AB   | bagtype1 | 5        |          |
      | ABC  | bagtype1 | 10       | X        |
      |      | bagtype2 | 10       |          |
      | AB   | bagtype2 | 11       | X        |
    Given a kit type "kittype1" with bags list of ... passed in 0.013s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    Given a kit type "kittype2" with bags list of ... passed in 0.021s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 2        |
      | C    | bagtype3 | 3        |
    Given a set of specific kits ... passed in 0.007s
      | name | kind     | quantity | complete |
      | A    | kittype1 | 10       |          |
      | ABC  | kittype2 | 11       | X        |
    When I read all "bag" ... passed in 0.002s
    And I divide off "2" of the first bag ... passed in 0.005s
    Then the first item should have "quantity" equal to number "3" ... passed in 0.000s
    And the last item should have "quantity" equal to number "2" ... passed in 0.000s
    When I read all "bag" ... passed in 0.002s
    Then the first item should have "name" equal to "AB" ... passed in 0.000s
    And the first item should have "quantity" equal to number "3" ... passed in 0.000s
    And the last item should have "quantity" equal to number "2" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
bagtype.data {'id': 25, 'kind': 'bagtype1', 'ingredients': []}
[OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 45), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 46), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 45), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 26, 'kind': 'bagtype2', 'ingredients': []}
[OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 45), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 46), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 45), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 27, 'kind': 'bagtype3', 'ingredients': []}
[OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 45), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 46), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 43), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 44), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 45), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
OrderedDict([('id', 25), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 64), ('name', 'A'), ('quantity', 1), ('bagtype', 25), ('part', 43)]), OrderedDict([('id', 65), ('name', 'B'), ('quantity', 2), ('bagtype', 25), ('part', 44)]), OrderedDict([('id', 66), ('name', 'C'), ('quantity', 1), ('bagtype', 25), ('part', 45)])])])
OrderedDict([('id', 25), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 64), ('name', 'A'), ('quantity', 1), ('bagtype', 25), ('part', 43)]), OrderedDict([('id', 65), ('name', 'B'), ('quantity', 2), ('bagtype', 25), ('part', 44)]), OrderedDict([('id', 66), ('name', 'C'), ('quantity', 1), ('bagtype', 25), ('part', 45)])])])
OrderedDict([('id', 25), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 64), ('name', 'A'), ('quantity', 1), ('bagtype', 25), ('part', 43)]), OrderedDict([('id', 65), ('name', 'B'), ('quantity', 2), ('bagtype', 25), ('part', 44)]), OrderedDict([('id', 66), ('name', 'C'), ('quantity', 1), ('bagtype', 25), ('part', 45)])])])
OrderedDict([('id', 26), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 67), ('name', 'A'), ('quantity', 2), ('bagtype', 26), ('part', 44)]), OrderedDict([('id', 68), ('name', 'B'), ('quantity', 3), ('bagtype', 26), ('part', 45)])])])
OrderedDict([('id', 25), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 64), ('name', 'A'), ('quantity', 1), ('bagtype', 25), ('part', 43)]), OrderedDict([('id', 65), ('name', 'B'), ('quantity', 2), ('bagtype', 25), ('part', 44)]), OrderedDict([('id', 66), ('name', 'C'), ('quantity', 1), ('bagtype', 25), ('part', 45)])])])
OrderedDict([('id', 26), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 67), ('name', 'A'), ('quantity', 2), ('bagtype', 26), ('part', 44)]), OrderedDict([('id', 68), ('name', 'B'), ('quantity', 3), ('bagtype', 26), ('part', 45)])])])
kittype.data {'id': 12, 'kind': 'kittype1'}
[OrderedDict([('id', 25), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 64), ('name', 'A'), ('quantity', 1), ('bagtype', 25), ('part', 43)]), OrderedDict([('id', 65), ('name', 'B'), ('quantity', 2), ('bagtype', 25), ('part', 44)]), OrderedDict([('id', 66), ('name', 'C'), ('quantity', 1), ('bagtype', 25), ('part', 45)])])]), OrderedDict([('id', 26), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 67), ('name', 'A'), ('quantity', 2), ('bagtype', 26), ('part', 44)]), OrderedDict([('id', 68), ('name', 'B'), ('quantity', 3), ('bagtype', 26), ('part', 45)])])]), OrderedDict([('id', 27), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 69), ('name', 'A'), ('quantity', 1), ('bagtype', 27), ('part', 45)])])])]
OrderedDict([('id', 25), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 64), ('name', 'A'), ('quantity', 1), ('bagtype', 25), ('part', 43)]), OrderedDict([('id', 65), ('name', 'B'), ('quantity', 2), ('bagtype', 25), ('part', 44)]), OrderedDict([('id', 66), ('name', 'C'), ('quantity', 1), ('bagtype', 25), ('part', 45)])])])
OrderedDict([('id', 25), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 64), ('name', 'A'), ('quantity', 1), ('bagtype', 25), ('part', 43)]), OrderedDict([('id', 65), ('name', 'B'), ('quantity', 2), ('bagtype', 25), ('part', 44)]), OrderedDict([('id', 66), ('name', 'C'), ('quantity', 1), ('bagtype', 25), ('part', 45)])])])
OrderedDict([('id', 26), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 67), ('name', 'A'), ('quantity', 2), ('bagtype', 26), ('part', 44)]), OrderedDict([('id', 68), ('name', 'B'), ('quantity', 3), ('bagtype', 26), ('part', 45)])])])
kittype.data {'id': 13, 'kind': 'kittype2'}
[OrderedDict([('id', 25), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 64), ('name', 'A'), ('quantity', 1), ('bagtype', 25), ('part', 43)]), OrderedDict([('id', 65), ('name', 'B'), ('quantity', 2), ('bagtype', 25), ('part', 44)]), OrderedDict([('id', 66), ('name', 'C'), ('quantity', 1), ('bagtype', 25), ('part', 45)])])]), OrderedDict([('id', 26), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 67), ('name', 'A'), ('quantity', 2), ('bagtype', 26), ('part', 44)]), OrderedDict([('id', 68), ('name', 'B'), ('quantity', 3), ('bagtype', 26), ('part', 45)])])]), OrderedDict([('id', 27), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 69), ('name', 'A'), ('quantity', 1), ('bagtype', 27), ('part', 45)])])])]
OrderedDict([('id', 25), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 64), ('name', 'A'), ('quantity', 1), ('bagtype', 25), ('part', 43)]), OrderedDict([('id', 65), ('name', 'B'), ('quantity', 2), ('bagtype', 25), ('part', 44)]), OrderedDict([('id', 66), ('name', 'C'), ('quantity', 1), ('bagtype', 25), ('part', 45)])])])
OrderedDict([('id', 25), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 64), ('name', 'A'), ('quantity', 1), ('bagtype', 25), ('part', 43)]), OrderedDict([('id', 65), ('name', 'B'), ('quantity', 2), ('bagtype', 25), ('part', 44)]), OrderedDict([('id', 66), ('name', 'C'), ('quantity', 1), ('bagtype', 25), ('part', 45)])])])
OrderedDict([('id', 26), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 67), ('name', 'A'), ('quantity', 2), ('bagtype', 26), ('part', 44)]), OrderedDict([('id', 68), ('name', 'B'), ('quantity', 3), ('bagtype', 26), ('part', 45)])])])
OrderedDict([('id', 25), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 64), ('name', 'A'), ('quantity', 1), ('bagtype', 25), ('part', 43)]), OrderedDict([('id', 65), ('name', 'B'), ('quantity', 2), ('bagtype', 25), ('part', 44)]), OrderedDict([('id', 66), ('name', 'C'), ('quantity', 1), ('bagtype', 25), ('part', 45)])])])
OrderedDict([('id', 26), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 67), ('name', 'A'), ('quantity', 2), ('bagtype', 26), ('part', 44)]), OrderedDict([('id', 68), ('name', 'B'), ('quantity', 3), ('bagtype', 26), ('part', 45)])])])
OrderedDict([('id', 27), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 69), ('name', 'A'), ('quantity', 1), ('bagtype', 27), ('part', 45)])])])
All kitypes: [OrderedDict([('id', 12), ('kind', 'kittype1')]), OrderedDict([('id', 13), ('kind', 'kittype2')])]
OrderedDict([('id', 12), ('kind', 'kittype1')])
OrderedDict([('id', 12), ('kind', 'kittype1')])
OrderedDict([('id', 13), ('kind', 'kittype2')])
All bag: [OrderedDict([('id', 40), ('name', 'AB'), ('quantity', 5), ('complete', False), ('kind', 25)]), OrderedDict([('id', 41), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 25)]), OrderedDict([('id', 42), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 26)]), OrderedDict([('id', 43), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 26)])]
[{'id': 40, 'name': 'AB', 'quantity': 3, 'complete': False, 'kind': 25}, {'id': 44, 'name': 'AB', 'quantity': 2, 'complete': False, 'kind': 25}]
[{'id': 40, 'name': 'AB', 'quantity': 3, 'complete': False, 'kind': 25}, {'id': 44, 'name': 'AB', 'quantity': 2, 'complete': False, 'kind': 25}]
All bag: [OrderedDict([('id', 40), ('name', 'AB'), ('quantity', 3), ('complete', False), ('kind', 25)]), OrderedDict([('id', 41), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 25)]), OrderedDict([('id', 42), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 26)]), OrderedDict([('id', 43), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 26)]), OrderedDict([('id', 44), ('name', 'AB'), ('quantity', 2), ('complete', False), ('kind', 25)])]
[OrderedDict([('id', 40), ('name', 'AB'), ('quantity', 3), ('complete', False), ('kind', 25)]), OrderedDict([('id', 41), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 25)]), OrderedDict([('id', 42), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 26)]), OrderedDict([('id', 43), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 26)]), OrderedDict([('id', 44), ('name', 'AB'), ('quantity', 2), ('complete', False), ('kind', 25)])]
[OrderedDict([('id', 40), ('name', 'AB'), ('quantity', 3), ('complete', False), ('kind', 25)]), OrderedDict([('id', 41), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 25)]), OrderedDict([('id', 42), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 26)]), OrderedDict([('id', 43), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 26)]), OrderedDict([('id', 44), ('name', 'AB'), ('quantity', 2), ('complete', False), ('kind', 25)])]
[OrderedDict([('id', 40), ('name', 'AB'), ('quantity', 3), ('complete', False), ('kind', 25)]), OrderedDict([('id', 41), ('name', 'ABC'), ('quantity', 10), ('complete', True), ('kind', 25)]), OrderedDict([('id', 42), ('name', ''), ('quantity', 10), ('complete', False), ('kind', 26)]), OrderedDict([('id', 43), ('name', 'AB'), ('quantity', 11), ('complete', True), ('kind', 26)]), OrderedDict([('id', 44), ('name', 'AB'), ('quantity', 2), ('complete', False), ('kind', 25)])]

]]>
</system-out></testcase><testcase classname="features.kitpacker.Kit packer" name="US13: As a kit packer, I want to divide kits, so that when I find I am low on bags to complete all the kits, I can complete some, keeping track of everything along the way." status="passed" time="0.100445"><system-out>
<![CDATA[
@scenario.begin
  Scenario: US13: As a kit packer, I want to divide kits, so that when I find I am low on bags to complete all the kits, I can complete some, keeping track of everything along the way.
    Given a set of specific parts ... passed in 0.010s
      | name  | description  | quantity |
      | partA | descriptionA | 12       |
      | partB | descriptionB | 8        |
      | partC | descriptionC | 1        |
      | partD | descriptionC | 4        |
    Given a bag type "bagtype1" with parts list of ... passed in 0.018s
      | name | part  | quantity |
      | A    | partA | 1        |
      | B    | partB | 2        |
      | C    | partC | 1        |
    Given a bag type "bagtype2" with parts list of ... passed in 0.012s
      | name | part  | quantity |
      | A    | partB | 2        |
      | B    | partC | 3        |
    Given a bag type "bagtype3" with parts list of ... passed in 0.009s
      | name | part  | quantity |
      | A    | partC | 1        |
    Given a set of specific bags ... passed in 0.012s
      | name | kind     | quantity | complete |
      | AB   | bagtype1 | 5        |          |
      | ABC  | bagtype1 | 10       | X        |
      |      | bagtype2 | 10       |          |
      | AB   | bagtype2 | 11       | X        |
    Given a kit type "kittype1" with bags list of ... passed in 0.012s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    Given a kit type "kittype2" with bags list of ... passed in 0.015s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 2        |
      | C    | bagtype3 | 3        |
    Given a set of specific kits ... passed in 0.006s
      | name | kind     | quantity | complete |
      | A    | kittype1 | 10       |          |
      | ABC  | kittype2 | 11       | X        |
    When I read all "kit" ... passed in 0.002s
    And I divide off "4" of the first kit ... passed in 0.004s
    Then the first item should have "quantity" equal to number "6" ... passed in 0.000s
    And the last item should have "quantity" equal to number "4" ... passed in 0.000s
    When I read all "kit" ... passed in 0.002s
    Then the first item should have "name" equal to "A" ... passed in 0.000s
    And the first item should have "quantity" equal to number "6" ... passed in 0.000s
    And the last item should have "quantity" equal to number "4" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
bagtype.data {'id': 28, 'kind': 'bagtype1', 'ingredients': []}
[OrderedDict([('id', 47), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 48), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 49), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 50), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 47), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 47), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 48), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 47), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 48), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 49), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 29, 'kind': 'bagtype2', 'ingredients': []}
[OrderedDict([('id', 47), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 48), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 49), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 50), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 47), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 48), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 47), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 48), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 49), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 30, 'kind': 'bagtype3', 'ingredients': []}
[OrderedDict([('id', 47), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 48), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 49), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 50), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 47), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 48), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 49), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
OrderedDict([('id', 28), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 70), ('name', 'A'), ('quantity', 1), ('bagtype', 28), ('part', 47)]), OrderedDict([('id', 71), ('name', 'B'), ('quantity', 2), ('bagtype', 28), ('part', 48)]), OrderedDict([('id', 72), ('name', 'C'), ('quantity', 1), ('bagtype', 28), ('part', 49)])])])
OrderedDict([('id', 28), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 70), ('name', 'A'), ('quantity', 1), ('bagtype', 28), ('part', 47)]), OrderedDict([('id', 71), ('name', 'B'), ('quantity', 2), ('bagtype', 28), ('part', 48)]), OrderedDict([('id', 72), ('name', 'C'), ('quantity', 1), ('bagtype', 28), ('part', 49)])])])
OrderedDict([('id', 28), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 70), ('name', 'A'), ('quantity', 1), ('bagtype', 28), ('part', 47)]), OrderedDict([('id', 71), ('name', 'B'), ('quantity', 2), ('bagtype', 28), ('part', 48)]), OrderedDict([('id', 72), ('name', 'C'), ('quantity', 1), ('bagtype', 28), ('part', 49)])])])
OrderedDict([('id', 29), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 73), ('name', 'A'), ('quantity', 2), ('bagtype', 29), ('part', 48)]), OrderedDict([('id', 74), ('name', 'B'), ('quantity', 3), ('bagtype', 29), ('part', 49)])])])
OrderedDict([('id', 28), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 70), ('name', 'A'), ('quantity', 1), ('bagtype', 28), ('part', 47)]), OrderedDict([('id', 71), ('name', 'B'), ('quantity', 2), ('bagtype', 28), ('part', 48)]), OrderedDict([('id', 72), ('name', 'C'), ('quantity', 1), ('bagtype', 28), ('part', 49)])])])
OrderedDict([('id', 29), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 73), ('name', 'A'), ('quantity', 2), ('bagtype', 29), ('part', 48)]), OrderedDict([('id', 74), ('name', 'B'), ('quantity', 3), ('bagtype', 29), ('part', 49)])])])
kittype.data {'id': 14, 'kind': 'kittype1'}
[OrderedDict([('id', 28), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 70), ('name', 'A'), ('quantity', 1), ('bagtype', 28), ('part', 47)]), OrderedDict([('id', 71), ('name', 'B'), ('quantity', 2), ('bagtype', 28), ('part', 48)]), OrderedDict([('id', 72), ('name', 'C'), ('quantity', 1), ('bagtype', 28), ('part', 49)])])]), OrderedDict([('id', 29), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 73), ('name', 'A'), ('quantity', 2), ('bagtype', 29), ('part', 48)]), OrderedDict([('id', 74), ('name', 'B'), ('quantity', 3), ('bagtype', 29), ('part', 49)])])]), OrderedDict([('id', 30), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 75), ('name', 'A'), ('quantity', 1), ('bagtype', 30), ('part', 49)])])])]
OrderedDict([('id', 28), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 70), ('name', 'A'), ('quantity', 1), ('bagtype', 28), ('part', 47)]), OrderedDict([('id', 71), ('name', 'B'), ('quantity', 2), ('bagtype', 28), ('part', 48)]), OrderedDict([('id', 72), ('name', 'C'), ('quantity', 1), ('bagtype', 28), ('part', 49)])])])
OrderedDict([('id', 28), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 70), ('name', 'A'), ('quantity', 1), ('bagtype', 28), ('part', 47)]), OrderedDict([('id', 71), ('name', 'B'), ('quantity', 2), ('bagtype', 28), ('part', 48)]), OrderedDict([('id', 72), ('name', 'C'), ('quantity', 1), ('bagtype', 28), ('part', 49)])])])
OrderedDict([('id', 29), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 73), ('name', 'A'), ('quantity', 2), ('bagtype', 29), ('part', 48)]), OrderedDict([('id', 74), ('name', 'B'), ('quantity', 3), ('bagtype', 29), ('part', 49)])])])
kittype.data {'id': 15, 'kind': 'kittype2'}
[OrderedDict([('id', 28), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 70), ('name', 'A'), ('quantity', 1), ('bagtype', 28), ('part', 47)]), OrderedDict([('id', 71), ('name', 'B'), ('quantity', 2), ('bagtype', 28), ('part', 48)]), OrderedDict([('id', 72), ('name', 'C'), ('quantity', 1), ('bagtype', 28), ('part', 49)])])]), OrderedDict([('id', 29), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 73), ('name', 'A'), ('quantity', 2), ('bagtype', 29), ('part', 48)]), OrderedDict([('id', 74), ('name', 'B'), ('quantity', 3), ('bagtype', 29), ('part', 49)])])]), OrderedDict([('id', 30), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 75), ('name', 'A'), ('quantity', 1), ('bagtype', 30), ('part', 49)])])])]
OrderedDict([('id', 28), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 70), ('name', 'A'), ('quantity', 1), ('bagtype', 28), ('part', 47)]), OrderedDict([('id', 71), ('name', 'B'), ('quantity', 2), ('bagtype', 28), ('part', 48)]), OrderedDict([('id', 72), ('name', 'C'), ('quantity', 1), ('bagtype', 28), ('part', 49)])])])
OrderedDict([('id', 28), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 70), ('name', 'A'), ('quantity', 1), ('bagtype', 28), ('part', 47)]), OrderedDict([('id', 71), ('name', 'B'), ('quantity', 2), ('bagtype', 28), ('part', 48)]), OrderedDict([('id', 72), ('name', 'C'), ('quantity', 1), ('bagtype', 28), ('part', 49)])])])
OrderedDict([('id', 29), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 73), ('name', 'A'), ('quantity', 2), ('bagtype', 29), ('part', 48)]), OrderedDict([('id', 74), ('name', 'B'), ('quantity', 3), ('bagtype', 29), ('part', 49)])])])
OrderedDict([('id', 28), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 70), ('name', 'A'), ('quantity', 1), ('bagtype', 28), ('part', 47)]), OrderedDict([('id', 71), ('name', 'B'), ('quantity', 2), ('bagtype', 28), ('part', 48)]), OrderedDict([('id', 72), ('name', 'C'), ('quantity', 1), ('bagtype', 28), ('part', 49)])])])
OrderedDict([('id', 29), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 73), ('name', 'A'), ('quantity', 2), ('bagtype', 29), ('part', 48)]), OrderedDict([('id', 74), ('name', 'B'), ('quantity', 3), ('bagtype', 29), ('part', 49)])])])
OrderedDict([('id', 30), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 75), ('name', 'A'), ('quantity', 1), ('bagtype', 30), ('part', 49)])])])
All kitypes: [OrderedDict([('id', 14), ('kind', 'kittype1')]), OrderedDict([('id', 15), ('kind', 'kittype2')])]
OrderedDict([('id', 14), ('kind', 'kittype1')])
OrderedDict([('id', 14), ('kind', 'kittype1')])
OrderedDict([('id', 15), ('kind', 'kittype2')])
All kit: [OrderedDict([('id', 20), ('name', 'A'), ('quantity', 10), ('complete', False), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)])]
[{'id': 20, 'name': 'A', 'quantity': 6, 'complete': False, 'kind': 14}, {'id': 22, 'name': 'A', 'quantity': 4, 'complete': False, 'kind': 14}]
[{'id': 20, 'name': 'A', 'quantity': 6, 'complete': False, 'kind': 14}, {'id': 22, 'name': 'A', 'quantity': 4, 'complete': False, 'kind': 14}]
All kit: [OrderedDict([('id', 20), ('name', 'A'), ('quantity', 6), ('complete', False), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)]), OrderedDict([('id', 22), ('name', 'A'), ('quantity', 4), ('complete', False), ('kind', 14)])]
[OrderedDict([('id', 20), ('name', 'A'), ('quantity', 6), ('complete', False), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)]), OrderedDict([('id', 22), ('name', 'A'), ('quantity', 4), ('complete', False), ('kind', 14)])]
[OrderedDict([('id', 20), ('name', 'A'), ('quantity', 6), ('complete', False), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)]), OrderedDict([('id', 22), ('name', 'A'), ('quantity', 4), ('complete', False), ('kind', 14)])]
[OrderedDict([('id', 20), ('name', 'A'), ('quantity', 6), ('complete', False), ('kind', 14)]), OrderedDict([('id', 21), ('name', 'ABC'), ('quantity', 11), ('complete', True), ('kind', 15)]), OrderedDict([('id', 22), ('name', 'A'), ('quantity', 4), ('complete', False), ('kind', 14)])]

]]>
</system-out></testcase><testcase classname="features.kitpacker.Kit packer" name="US14: As a kit packer, I want to see how many bags are possible, so that I do not get delayed by missing parts half-way through." status="passed" time="0.088311"><system-out>
<![CDATA[
@scenario.begin
  Scenario: US14: As a kit packer, I want to see how many bags are possible, so that I do not get delayed by missing parts half-way through.
    Given a set of specific parts ... passed in 0.008s
      | name  | description  | quantity |
      | partA | descriptionA | 12       |
      | partB | descriptionB | 8        |
      | partC | descriptionC | 1        |
      | partD | descriptionC | 4        |
    Given a bag type "bagtype1" with parts list of ... passed in 0.013s
      | name | part  | quantity |
      | A    | partA | 1        |
      | B    | partB | 2        |
      | C    | partC | 1        |
    Given a bag type "bagtype2" with parts list of ... passed in 0.011s
      | name | part  | quantity |
      | A    | partB | 2        |
      | B    | partC | 3        |
    Given a bag type "bagtype3" with parts list of ... passed in 0.008s
      | name | part  | quantity |
      | A    | partC | 1        |
    Given a set of specific bags ... passed in 0.011s
      | name | kind     | quantity | complete |
      | AB   | bagtype1 | 5        |          |
      | ABC  | bagtype1 | 10       | X        |
      |      | bagtype2 | 10       |          |
      | AB   | bagtype2 | 11       | X        |
    Given a kit type "kittype1" with bags list of ... passed in 0.011s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    Given a kit type "kittype2" with bags list of ... passed in 0.014s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 2        |
      | C    | bagtype3 | 3        |
    Given a set of specific kits ... passed in 0.006s
      | name | kind     | quantity | complete |
      | A    | kittype1 | 10       |          |
      | ABC  | kittype2 | 11       | X        |
    When I request potential bags of "bagtype1" ... passed in 0.006s
    Then I should see the "potential_bags" is number "1" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
bagtype.data {'id': 31, 'kind': 'bagtype1', 'ingredients': []}
[OrderedDict([('id', 51), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 52), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 53), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 54), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 51), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 51), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 52), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 51), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 52), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 53), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 32, 'kind': 'bagtype2', 'ingredients': []}
[OrderedDict([('id', 51), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 52), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 53), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 54), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 51), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 52), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 51), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 52), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 53), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 33, 'kind': 'bagtype3', 'ingredients': []}
[OrderedDict([('id', 51), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 52), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 53), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 54), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 51), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 52), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 53), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])])
OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])])
OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])])
OrderedDict([('id', 32), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 79), ('name', 'A'), ('quantity', 2), ('bagtype', 32), ('part', 52)]), OrderedDict([('id', 80), ('name', 'B'), ('quantity', 3), ('bagtype', 32), ('part', 53)])])])
OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])])
OrderedDict([('id', 32), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 79), ('name', 'A'), ('quantity', 2), ('bagtype', 32), ('part', 52)]), OrderedDict([('id', 80), ('name', 'B'), ('quantity', 3), ('bagtype', 32), ('part', 53)])])])
kittype.data {'id': 16, 'kind': 'kittype1'}
[OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])]), OrderedDict([('id', 32), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 79), ('name', 'A'), ('quantity', 2), ('bagtype', 32), ('part', 52)]), OrderedDict([('id', 80), ('name', 'B'), ('quantity', 3), ('bagtype', 32), ('part', 53)])])]), OrderedDict([('id', 33), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 81), ('name', 'A'), ('quantity', 1), ('bagtype', 33), ('part', 53)])])])]
OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])])
OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])])
OrderedDict([('id', 32), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 79), ('name', 'A'), ('quantity', 2), ('bagtype', 32), ('part', 52)]), OrderedDict([('id', 80), ('name', 'B'), ('quantity', 3), ('bagtype', 32), ('part', 53)])])])
kittype.data {'id': 17, 'kind': 'kittype2'}
[OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])]), OrderedDict([('id', 32), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 79), ('name', 'A'), ('quantity', 2), ('bagtype', 32), ('part', 52)]), OrderedDict([('id', 80), ('name', 'B'), ('quantity', 3), ('bagtype', 32), ('part', 53)])])]), OrderedDict([('id', 33), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 81), ('name', 'A'), ('quantity', 1), ('bagtype', 33), ('part', 53)])])])]
OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])])
OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])])
OrderedDict([('id', 32), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 79), ('name', 'A'), ('quantity', 2), ('bagtype', 32), ('part', 52)]), OrderedDict([('id', 80), ('name', 'B'), ('quantity', 3), ('bagtype', 32), ('part', 53)])])])
OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])])
OrderedDict([('id', 32), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 79), ('name', 'A'), ('quantity', 2), ('bagtype', 32), ('part', 52)]), OrderedDict([('id', 80), ('name', 'B'), ('quantity', 3), ('bagtype', 32), ('part', 53)])])])
OrderedDict([('id', 33), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 81), ('name', 'A'), ('quantity', 1), ('bagtype', 33), ('part', 53)])])])
All kitypes: [OrderedDict([('id', 16), ('kind', 'kittype1')]), OrderedDict([('id', 17), ('kind', 'kittype2')])]
OrderedDict([('id', 16), ('kind', 'kittype1')])
OrderedDict([('id', 16), ('kind', 'kittype1')])
OrderedDict([('id', 17), ('kind', 'kittype2')])
bagtypes: [OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])]), OrderedDict([('id', 32), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 79), ('name', 'A'), ('quantity', 2), ('bagtype', 32), ('part', 52)]), OrderedDict([('id', 80), ('name', 'B'), ('quantity', 3), ('bagtype', 32), ('part', 53)])])]), OrderedDict([('id', 33), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 81), ('name', 'A'), ('quantity', 1), ('bagtype', 33), ('part', 53)])])])]
OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])])
bagtype: OrderedDict([('id', 31), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 76), ('name', 'A'), ('quantity', 1), ('bagtype', 31), ('part', 51)]), OrderedDict([('id', 77), ('name', 'B'), ('quantity', 2), ('bagtype', 31), ('part', 52)]), OrderedDict([('id', 78), ('name', 'C'), ('quantity', 1), ('bagtype', 31), ('part', 53)])])])
<Response status_code=200, "application/json">
{'bagtype': 31, 'potential_bags': 1, 'potential_bags_by_part': {'partA': 12, 'partB': 4, 'partC': 1}}
{'bagtype': 31, 'potential_bags': 1, 'potential_bags_by_part': {'partA': 12, 'partB': 4, 'partC': 1}}

]]>
</system-out></testcase><testcase classname="features.kitpacker.Kit packer" name="US15: As a kit packer, I want to see a list of parts that a bag needs, so that I fill the bag correctly." status="passed" time="0.096858"><system-out>
<![CDATA[
@scenario.begin
  Scenario: US15: As a kit packer, I want to see a list of parts that a bag needs, so that I fill the bag correctly.
    Given a set of specific parts ... passed in 0.009s
      | name  | description  | quantity |
      | partA | descriptionA | 12       |
      | partB | descriptionB | 8        |
      | partC | descriptionC | 1        |
      | partD | descriptionC | 4        |
    Given a bag type "bagtype1" with parts list of ... passed in 0.017s
      | name | part  | quantity |
      | A    | partA | 1        |
      | B    | partB | 2        |
      | C    | partC | 1        |
    Given a bag type "bagtype2" with parts list of ... passed in 0.010s
      | name | part  | quantity |
      | A    | partB | 2        |
      | B    | partC | 3        |
    Given a bag type "bagtype3" with parts list of ... passed in 0.008s
      | name | part  | quantity |
      | A    | partC | 1        |
    Given a set of specific bags ... passed in 0.011s
      | name | kind     | quantity | complete |
      | AB   | bagtype1 | 5        |          |
      | ABC  | bagtype1 | 10       | X        |
      |      | bagtype2 | 10       |          |
      | AB   | bagtype2 | 11       | X        |
    Given a kit type "kittype1" with bags list of ... passed in 0.010s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 1        |
    Given a kit type "kittype2" with bags list of ... passed in 0.013s
      | name | bagtype  | quantity |
      | A    | bagtype1 | 1        |
      | B    | bagtype2 | 2        |
      | C    | bagtype3 | 3        |
    Given a set of specific kits ... passed in 0.005s
      | name | kind     | quantity | complete |
      | A    | kittype1 | 10       |          |
      | ABC  | kittype2 | 11       | X        |
    When I request the ingredients of bagtype "bagtype1" ... passed in 0.005s
    Then I should see "A" is "1" of part "partA" ... passed in 0.003s
    Then I should see "B" is "2" of part "partB" ... passed in 0.003s
    Then I should see "C" is "1" of part "partC" ... passed in 0.003s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
bagtype.data {'id': 34, 'kind': 'bagtype1', 'ingredients': []}
[OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 57), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 58), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 57), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 35, 'kind': 'bagtype2', 'ingredients': []}
[OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 57), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 58), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 57), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
bagtype.data {'id': 36, 'kind': 'bagtype3', 'ingredients': []}
[OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])]), OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])]), OrderedDict([('id', 57), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])]), OrderedDict([('id', 58), ('name', 'partD'), ('description', 'descriptionC'), ('quantity', 4), ('purchases', [])])]
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 57), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])
OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])])
OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])])
OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])])
OrderedDict([('id', 35), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 85), ('name', 'A'), ('quantity', 2), ('bagtype', 35), ('part', 56)]), OrderedDict([('id', 86), ('name', 'B'), ('quantity', 3), ('bagtype', 35), ('part', 57)])])])
OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])])
OrderedDict([('id', 35), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 85), ('name', 'A'), ('quantity', 2), ('bagtype', 35), ('part', 56)]), OrderedDict([('id', 86), ('name', 'B'), ('quantity', 3), ('bagtype', 35), ('part', 57)])])])
kittype.data {'id': 18, 'kind': 'kittype1'}
[OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])]), OrderedDict([('id', 35), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 85), ('name', 'A'), ('quantity', 2), ('bagtype', 35), ('part', 56)]), OrderedDict([('id', 86), ('name', 'B'), ('quantity', 3), ('bagtype', 35), ('part', 57)])])]), OrderedDict([('id', 36), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 87), ('name', 'A'), ('quantity', 1), ('bagtype', 36), ('part', 57)])])])]
OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])])
OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])])
OrderedDict([('id', 35), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 85), ('name', 'A'), ('quantity', 2), ('bagtype', 35), ('part', 56)]), OrderedDict([('id', 86), ('name', 'B'), ('quantity', 3), ('bagtype', 35), ('part', 57)])])])
kittype.data {'id': 19, 'kind': 'kittype2'}
[OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])]), OrderedDict([('id', 35), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 85), ('name', 'A'), ('quantity', 2), ('bagtype', 35), ('part', 56)]), OrderedDict([('id', 86), ('name', 'B'), ('quantity', 3), ('bagtype', 35), ('part', 57)])])]), OrderedDict([('id', 36), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 87), ('name', 'A'), ('quantity', 1), ('bagtype', 36), ('part', 57)])])])]
OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])])
OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])])
OrderedDict([('id', 35), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 85), ('name', 'A'), ('quantity', 2), ('bagtype', 35), ('part', 56)]), OrderedDict([('id', 86), ('name', 'B'), ('quantity', 3), ('bagtype', 35), ('part', 57)])])])
OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])])
OrderedDict([('id', 35), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 85), ('name', 'A'), ('quantity', 2), ('bagtype', 35), ('part', 56)]), OrderedDict([('id', 86), ('name', 'B'), ('quantity', 3), ('bagtype', 35), ('part', 57)])])])
OrderedDict([('id', 36), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 87), ('name', 'A'), ('quantity', 1), ('bagtype', 36), ('part', 57)])])])
All kitypes: [OrderedDict([('id', 18), ('kind', 'kittype1')]), OrderedDict([('id', 19), ('kind', 'kittype2')])]
OrderedDict([('id', 18), ('kind', 'kittype1')])
OrderedDict([('id', 18), ('kind', 'kittype1')])
OrderedDict([('id', 19), ('kind', 'kittype2')])
bagtypes: [OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])]), OrderedDict([('id', 35), ('kind', 'bagtype2'), ('ingredients', [OrderedDict([('id', 85), ('name', 'A'), ('quantity', 2), ('bagtype', 35), ('part', 56)]), OrderedDict([('id', 86), ('name', 'B'), ('quantity', 3), ('bagtype', 35), ('part', 57)])])]), OrderedDict([('id', 36), ('kind', 'bagtype3'), ('ingredients', [OrderedDict([('id', 87), ('name', 'A'), ('quantity', 1), ('bagtype', 36), ('part', 57)])])])]
OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])])
bagtype: OrderedDict([('id', 34), ('kind', 'bagtype1'), ('ingredients', [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])])])
<Response status_code=200, "application/json">
{'id': 34, 'kind': 'bagtype1', 'ingredients': [OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)]), OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)]), OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])]}
OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)])
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)])
OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)])
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 82), ('name', 'A'), ('quantity', 1), ('bagtype', 34), ('part', 55)])
OrderedDict([('id', 83), ('name', 'B'), ('quantity', 2), ('bagtype', 34), ('part', 56)])
OrderedDict([('id', 84), ('name', 'C'), ('quantity', 1), ('bagtype', 34), ('part', 57)])
OrderedDict([('id', 55), ('name', 'partA'), ('description', 'descriptionA'), ('quantity', 12), ('purchases', [])])
OrderedDict([('id', 56), ('name', 'partB'), ('description', 'descriptionB'), ('quantity', 8), ('purchases', [])])
OrderedDict([('id', 57), ('name', 'partC'), ('description', 'descriptionC'), ('quantity', 1), ('purchases', [])])

]]>
</system-out></testcase></testsuite>